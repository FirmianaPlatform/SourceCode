<tool id="mascotdat_parser" name="Mascotdat Parser">
	<description>Parse a Mascot result file and store data to DB</description>
	<stdio>
		<exit_code range="1:" err_level="fatal" />
	</stdio>	
	<command interpreter="python">
	#set $label = $input.display_name
	mascotdat_parser.py
	    -i '$input' 
	    -o $output
	    -a '$label'
	    -u $__user_id__
	    --rank $rank
	    --min_fdr $min_fdr
	    --min_ion $min_ion
	    --max_hit $max_hit
	    --dMZ $dMZ
	    --dRT $dRT
	    --store_to_db $store_to_db
	    --forceCache $forceCache
	</command>
	<inputs>
		<param name="store_to_db" type="select" label="Process single file?" help="Choose NO will only do QC ">
			<option value="yes">yes</option>
			<option value="no" selected="true">no</option>
		</param>
		<param name="forceCache" type="select" label="Force Cache the Experiment?" help="Choose Yes to cache without checking all searches' stage">
			<option type="integer" value="1">yes</option>
			<option type="integer" value="0" selected="true">no</option>
		</param>
		<param format="mascotdat" name="input" type="data" label="Mascot result file"/> 
		<param name="rank" type="integer" value="0" label="Choose which rank to operate(0 for default)"/>
		<param name="min_fdr" type="float" value="0.01" label="Protein FDR threshold"/>
		<param name="min_ion" type="integer" value="0" label="Ion score threshold for Protein Assembly"/>
		<param name="max_hit" type="integer" value="10" label="Max hit number for msparser"/>
		<param name="dMZ" type="integer" value="10" label="Delta m/z (in ppm) for finding max intensity in every peak text file" help="unit:ppm"/>
		<param name="dRT" type="integer" value="60" label="Delta rt time (in second) for finding probable peak in MS1" help="unit:second"/>
		       
	</inputs>
	<outputs>
		<data format="txt" name="output" label="${tool.name} on ${on_string}(${input.display_name})"/>
	</outputs>

	<help>
.. class:: infomark

**What it does**

Parse Mascot result file to obtain useful values for Cross search.
	</help>

</tool>
